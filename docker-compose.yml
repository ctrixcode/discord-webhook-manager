version: '3.8'

# Environment variables are loaded from .env file in the root directory
# Copy .env.example to .env and fill in your actual credentials

services:
  mongo:
    image: mongo:7.0
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: discord-webhook-manager-dev
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ ping: 1 }).ok"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    restart: unless-stopped
    ports:
      - "4000:4000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/backend/node_modules
      - pnpm_store:/root/.local/share/pnpm/store
    environment:
      - NODE_ENV=development
      - MONGO_URL=mongodb://mongo:27017/discord-webhook-manager-dev
      - PORT=4000
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - JWT_ACCESS_TOKEN_EXPIRES_IN=15m
      - JWT_REFRESH_TOKEN_EXPIRES_IN=7d
      - LOG_LEVEL=info
      - ALLOWED_ORIGINS=http://localhost:3000
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
      - DISCORD_REDIRECT_URI=http://localhost:3000/api/auth/discord/callback
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    depends_on:
      mongo:
        condition: service_healthy

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/web/node_modules
      - pnpm_store:/root/.local/share/pnpm/store
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:4000
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    command: pnpm run dev --filter web -- --hostname 0.0.0.0 --turbopack
    depends_on:
      - backend

volumes:
  mongo_data:
  pnpm_store: